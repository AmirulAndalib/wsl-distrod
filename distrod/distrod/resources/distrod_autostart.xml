<?xml version="1.0" encoding="UTF-16"?>
<Task version="1.2" xmlns="http://schemas.microsoft.com/windows/2004/02/mit/task">
  <RegistrationInfo>
    <Date>2021-08-02T23:43:02.0467885</Date>
    <Author>{{USER_NAME}}</Author>
    <URI>\{{TASK_NAME}}</URI>
  </RegistrationInfo>
  <Triggers>
    <BootTrigger>
      <Enabled>true</Enabled>
      <Delay>PT30S</Delay>
    </BootTrigger>
  </Triggers>
  <Principals>
    <Principal id="Author">
      <LogonType>Password</LogonType>
      <RunLevel>LeastPrivilege</RunLevel>
    </Principal>
  </Principals>
  <Settings>
    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>
    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>
    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>
    <AllowHardTerminate>true</AllowHardTerminate>
    <StartWhenAvailable>false</StartWhenAvailable>
    <RunOnlyIfNetworkAvailable>false</RunOnlyIfNetworkAvailable>
    <IdleSettings>
      <StopOnIdleEnd>true</StopOnIdleEnd>
      <RestartOnIdle>false</RestartOnIdle>
    </IdleSettings>
    <AllowStartOnDemand>true</AllowStartOnDemand>
    <Enabled>true</Enabled>
    <Hidden>false</Hidden>
    <RunOnlyIfIdle>false</RunOnlyIfIdle>
    <WakeToRun>false</WakeToRun>
    <ExecutionTimeLimit>PT72H</ExecutionTimeLimit>
    <Priority>7</Priority>
  </Settings>
  <Actions Context="Author">
    <Exec>
      <Command>C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe</Command>
      <!-- Why not just starting WSL by wsl.exe command?
           It's because wsl.exe has a bug that it will not start if it is started
           by a non-administrative task that starts when Windows starts,
           and starting a long-running WSL process as admin has a security risk
           which allows local privilege escalation. -->
      <Arguments>-Command "do {
$WslLaunchInteractive = @'
[DllImport(\"wslapi.dll\")]
public static extern uint WslLaunchInteractive(
  [MarshalAs(UnmanagedType.LPWStr)]string DistributionName,
  [MarshalAs(UnmanagedType.LPWStr)]string Command,
  [MarshalAs(UnmanagedType.U1)]bool UseCurrentWorkingDirectory,
  out uint ExitCode
);
'@;

$wslapi = Add-Type -MemberDefinition $WslLaunchInteractive -Name 'WslApi' -Namespace 'Win32' -PassThru;
$exitcode=256;
$Env:DISTROD_EXEC_INIT_LAUNCH_DELAY = \"20\";
$Env:WSLENV += \":DISTROD_EXEC_INIT_LAUNCH_DELAY\";
$wslapi::WslLaunchInteractive('{{DISTRO_NAME}}', 'exit', $false, [ref]$exitcode);
} while($false)
"
      </Arguments>
    </Exec>
  </Actions>
</Task>
